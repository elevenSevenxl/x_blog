import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as a,c as s,f as t}from"./app-e33776c4.js";const p={},e=t(`<hr><h2 id="" tabindex="-1"><a class="header-anchor" href="#" aria-hidden="true">#</a></h2><h3 id="_1-概念" tabindex="-1"><a class="header-anchor" href="#_1-概念" aria-hidden="true">#</a> 1.概念</h3><p>栅格布局是一种将网页内容按照特定的列布局方式进行排列的布局方式。它通常用于创建响应式的网页布局，使得在不同的屏幕尺寸下，网页内容能够按照相应的栅格结构进行排列。栅格布局的原理是将网页内容按照一定的规则进行分割，然后将分割后的内容按照指定的列布局进行排列。这些分割和排列的过程可以通过 CSS 的 display: grid 属性来实现。</p><h3 id="_2-常见属性" tabindex="-1"><a class="header-anchor" href="#_2-常见属性" aria-hidden="true">#</a> 2.常见属性</h3><p><code>grid-template-columns</code>：用于定义栅格布局的列布局。可以是一个简单的长度值、一个百分比值或者一个 fr 单位。例如：<code>repeat(3, 1fr)</code>表示创建 3 列，每列的宽度自动根据其内容调整。</p><p><code>grid-template-rows</code>：用于定义栅格布局的行布局。用法与<code>grid-template-columns</code>类似。</p><p><code>grid-gap</code>：用于定义栅格布局的行间距和列间距。可以是一个长度值、一个百分比值或者一个 fr 单位。例如：<code>grid-gap: 10px;</code>表示行间距为<code>10px</code>，列间距为<code>10px</code>。</p><p><code>grid-auto-flow</code>：用于定义栅格布局的自动布局算法。可选值有<code>column</code>、<code>row</code>、<code>dense</code>。例如：<code>grid-auto-flow: column;</code>表示按照列布局自动排列。</p><p><code>grid-auto-positions</code>：用于定义栅格布局中项目的自动定位算法。可以是一个长度值或者一个百分比值。例如：<code>grid-auto-positions: start;</code>表示项目从左到右依次排列。</p><p><code>justify-content</code>：用于定义栅格布局中项目的水平对齐方式。可选值有<code>start</code>、<code>end</code>、<code>center</code>、<code>space-between</code>、<code>space-around</code>。例如：<code>justify-content: center;</code>表示项目水平居中排列。</p><p><code>align-items</code>：用于定义栅格布局中项目的垂直对齐方式。可选值有<code>start</code>、<code>end</code>、<code>center</code>、<code>baseline</code>、<code>stretch</code>。例如：<code>align-items: center;</code>表示项目垂直居中排列。</p><p><code>place-items</code>：用于组合<code>align-items</code>和<code>justify-content</code>属性。例如：<code>place-items: center center;</code>表示项目垂直居中排列，水平居中排列。</p><p><code>grid-template</code>：用于组合<code>grid-template-columns</code>、<code>grid-template-rows</code>和<code>grid-gap</code>属性。例如：<code>grid-template: repeat(3, 1fr) / 10px 10px;</code>表示创建 3 列，每列的宽度自动根据其内容调整，行间距为<code>10px</code>，列间距为<code>10px</code>。</p><h3 id="_3-案例" tabindex="-1"><a class="header-anchor" href="#_3-案例" aria-hidden="true">#</a> 3.案例</h3><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>en<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>UTF-8<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>viewport<span class="token punctuation">&quot;</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>width=device-width, initial-scale=1.0<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>栅格布局示例<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">
      <span class="token selector">.grid-container</span> <span class="token punctuation">{</span>
        <span class="token property">display</span><span class="token punctuation">:</span> grid<span class="token punctuation">;</span>
        <span class="token property">grid-template-columns</span><span class="token punctuation">:</span> <span class="token function">repeat</span><span class="token punctuation">(</span>3<span class="token punctuation">,</span> 1fr<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token property">grid-gap</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>
        <span class="token property">padding</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>

      <span class="token selector">.grid-item</span> <span class="token punctuation">{</span>
        <span class="token property">background-color</span><span class="token punctuation">:</span> #f1f1f1<span class="token punctuation">;</span>
        <span class="token property">padding</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>
        <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>grid-container<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>grid-item<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>grid-item<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>grid-item<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>grid-item<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>grid-item<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>5<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>grid-item<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>6<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在这个示例中，我们使用了<code>display: grid</code>属性来创建一个栅格布局容器。然后，我们使用<code>grid-template-columns</code>属性来定义栅格布局的列布局。这里我们使用了<code>repeat</code>函数来重复创建 3 列，每列的宽度为<code>1fr</code>，表示栅格布局的每列宽度自动根据其内容调整。</p><p>接下来，我们使用<code>grid-gap</code>属性来定义栅格布局的行间距和列间距。这里我们设置了行间距为<code>10px</code>，列间距为<code>10px</code>。</p><p>最后，我们使用<code>padding</code>属性来设置栅格布局容器的内边距。</p><p>在<code>grid-item</code>类中，我们设置了背景颜色、内边距和文本对齐方式等样式。</p><h2 id="当屏幕尺寸发生变化时-栅格布局会自动调整布局-以适应不同的屏幕尺寸。这样可以确保在不同的屏幕尺寸下-网页内容能够按照指定的栅格结构进行排列。" tabindex="-1"><a class="header-anchor" href="#当屏幕尺寸发生变化时-栅格布局会自动调整布局-以适应不同的屏幕尺寸。这样可以确保在不同的屏幕尺寸下-网页内容能够按照指定的栅格结构进行排列。" aria-hidden="true">#</a> 当屏幕尺寸发生变化时，栅格布局会自动调整布局，以适应不同的屏幕尺寸。这样可以确保在不同的屏幕尺寸下，网页内容能够按照指定的栅格结构进行排列。</h2>`,21),c=[e];function o(l,i){return a(),s("div",null,c)}const k=n(p,[["render",o],["__file","grid栅格布局介绍与使用.html.vue"]]);export{k as default};
