const t=JSON.parse(`{"key":"v-7671e885","path":"/react/react%E9%92%A9%E5%AD%90%E5%87%BD%E6%95%B0%E4%BD%BF%E7%94%A8.html","title":"react钩子函数使用","lang":"zh-CN","frontmatter":{"title":"react钩子函数使用","isTimeLine":true,"cover":"/assets/images/cover11.jpg","date":"2023-08-24T00:00:00.000Z","footer":"<a href=\\"https://icp.gov.moe/?keyword=20255521\\" target=\\"_blank\\">萌 ICP 备 20255521 号</a>","copyright":"Copyright © 2025 没有蜡笔的小新","category":["前端"],"tag":["react","javascript"],"description":"React 钩子函数介绍及使用 ​ React 钩子函数是一组特殊的函数，它们可以在组件的生命周期中执行特定的操作。钩子函数可以让你在不编写 class 的情况下使用 state 和其他 React 特性。以下是一些常用的 React 钩子函数及其用法： 1、useState ​ 用于在函数组件中添加 state。它接受一个初始状态值作为参数，并返回一个包含当前状态值和一个更新状态值的函数。 import React, { useState } from 'react' function Counter() { const [count, setCount] = useState(0) return ( &lt;div&gt; &lt;p&gt;当前计数：{count}&lt;/p&gt; &lt;button onClick={() =&gt; setCount(count + 1)}&gt;+1&lt;/button&gt; &lt;/div&gt; ) } export default Counter","head":[["meta",{"property":"og:url","content":"https://elevenSevenxl.github.io/x_blog/x_blog/react/react%E9%92%A9%E5%AD%90%E5%87%BD%E6%95%B0%E4%BD%BF%E7%94%A8.html"}],["meta",{"property":"og:site_name","content":"木兮blog"}],["meta",{"property":"og:title","content":"react钩子函数使用"}],["meta",{"property":"og:description","content":"React 钩子函数介绍及使用 ​ React 钩子函数是一组特殊的函数，它们可以在组件的生命周期中执行特定的操作。钩子函数可以让你在不编写 class 的情况下使用 state 和其他 React 特性。以下是一些常用的 React 钩子函数及其用法： 1、useState ​ 用于在函数组件中添加 state。它接受一个初始状态值作为参数，并返回一个包含当前状态值和一个更新状态值的函数。 import React, { useState } from 'react' function Counter() { const [count, setCount] = useState(0) return ( &lt;div&gt; &lt;p&gt;当前计数：{count}&lt;/p&gt; &lt;button onClick={() =&gt; setCount(count + 1)}&gt;+1&lt;/button&gt; &lt;/div&gt; ) } export default Counter"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://elevenSevenxl.github.io/x_blog/x_blog/assets/images/cover11.jpg"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-02-14T07:44:03.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"react钩子函数使用"}],["meta",{"property":"article:author","content":"没有蜡笔的小新"}],["meta",{"property":"article:tag","content":"react"}],["meta",{"property":"article:tag","content":"javascript"}],["meta",{"property":"article:published_time","content":"2023-08-24T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-02-14T07:44:03.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"react钩子函数使用\\",\\"image\\":[\\"https://elevenSevenxl.github.io/x_blog/x_blog/assets/images/cover11.jpg\\"],\\"datePublished\\":\\"2023-08-24T00:00:00.000Z\\",\\"dateModified\\":\\"2025-02-14T07:44:03.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"没有蜡笔的小新\\",\\"url\\":\\"https://elevenSevenxl.github.io/x_blog\\"}]}"]]},"headers":[{"level":3,"title":"React 钩子函数介绍及使用","slug":"react-钩子函数介绍及使用","link":"#react-钩子函数介绍及使用","children":[]},{"level":2,"title":"以上就是一些常用的 React 钩子函数及其用法。","slug":"以上就是一些常用的-react-钩子函数及其用法。","link":"#以上就是一些常用的-react-钩子函数及其用法。","children":[]}],"git":{"createdTime":1691504275000,"updatedTime":1739519043000,"contributors":[{"name":"yxl","email":"1551536781@qq.com","commits":2},{"name":"yxl","email":"123@qq.com","commits":1}]},"readingTime":{"minutes":2.41,"words":723},"filePathRelative":"react/react钩子函数使用.md","localizedDate":"2023年8月24日","excerpt":"<hr>\\n<h3> React 钩子函数介绍及使用</h3>\\n<p>​ React 钩子函数是一组特殊的函数，它们可以在组件的生命周期中执行特定的操作。钩子函数可以让你在不编写 class 的情况下使用 state 和其他 React 特性。以下是一些常用的 React 钩子函数及其用法：</p>\\n<h4> 1、useState</h4>\\n<p>​ 用于在函数组件中添加 state。它接受一个初始状态值作为参数，并返回一个包含当前状态值和一个更新状态值的函数。</p>\\n<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"token keyword\\">import</span> React<span class=\\"token punctuation\\">,</span> <span class=\\"token punctuation\\">{</span> useState <span class=\\"token punctuation\\">}</span> <span class=\\"token keyword\\">from</span> <span class=\\"token string\\">'react'</span>\\n\\n<span class=\\"token keyword\\">function</span> <span class=\\"token function\\">Counter</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token keyword\\">const</span> <span class=\\"token punctuation\\">[</span>count<span class=\\"token punctuation\\">,</span> setCount<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> <span class=\\"token function\\">useState</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">0</span><span class=\\"token punctuation\\">)</span>\\n\\n  <span class=\\"token keyword\\">return</span> <span class=\\"token punctuation\\">(</span>\\n    <span class=\\"token operator\\">&lt;</span>div<span class=\\"token operator\\">&gt;</span>\\n      <span class=\\"token operator\\">&lt;</span>p<span class=\\"token operator\\">&gt;</span>当前计数：<span class=\\"token punctuation\\">{</span>count<span class=\\"token punctuation\\">}</span><span class=\\"token operator\\">&lt;</span><span class=\\"token operator\\">/</span>p<span class=\\"token operator\\">&gt;</span>\\n      <span class=\\"token operator\\">&lt;</span>button onClick<span class=\\"token operator\\">=</span><span class=\\"token punctuation\\">{</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token function\\">setCount</span><span class=\\"token punctuation\\">(</span>count <span class=\\"token operator\\">+</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">}</span><span class=\\"token operator\\">&gt;</span><span class=\\"token operator\\">+</span><span class=\\"token number\\">1</span><span class=\\"token operator\\">&lt;</span><span class=\\"token operator\\">/</span>button<span class=\\"token operator\\">&gt;</span>\\n    <span class=\\"token operator\\">&lt;</span><span class=\\"token operator\\">/</span>div<span class=\\"token operator\\">&gt;</span>\\n  <span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token keyword\\">export</span> <span class=\\"token keyword\\">default</span> Counter\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{t as data};
