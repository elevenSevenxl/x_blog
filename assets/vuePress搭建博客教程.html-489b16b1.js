import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as s,c as a,a as e}from"./app-400ecbb4.js";const p="/assets/images/content1.png",t="/assets/images/content2.png",o="/assets/images/content3.png",i="/assets/images/content4.png",r="/assets/images/content5.png",c={},l=e(`<h3 id="vuepress-介绍" tabindex="-1"><a class="header-anchor" href="#vuepress-介绍" aria-hidden="true">#</a> VuePress 介绍</h3><p>​ VuePress 由两部分组成：第一部分是一个极简静态网站生成器 (opens new window)，它包含由 Vue 驱动的主题系统和插件 API，另一个部分是为书写技术文档而优化的默认主题，它的诞生初衷是为了支持 Vue 及其子项目的文档需求。每一个由 VuePress 生成的页面都带有预渲染好的 HTML，也因此具有非常好的加载性能和搜索引擎优化（SEO）。同时，一旦页面被加载，Vue 将接管这些静态内容，并将其转换成一个完整的单页应用（SPA），其他的页面则会只在用户浏览到的时候才按需加载。</p><h3 id="vuepress-主题" tabindex="-1"><a class="header-anchor" href="#vuepress-主题" aria-hidden="true">#</a> vuePress 主题</h3><p>​ vuePress 除了默认主题，还提供了很多扩展主题。</p><ul><li><p>vuepress 默认主题 21.7k⭐</p></li><li><p>vuepress-theme-hope 1.4k⭐</p></li><li><p>vuepress-theme-reco，（2.0 还在测试阶段） 1.6k⭐</p></li><li><p>vuepress-theme-vdoing 3.5k⭐</p></li></ul><p>不同主题的之间的最明显的差异就是默认的样式不同，其次就是默认提供的功能不同。</p><p>本次搭建采用的是 vuepress-theme-hope</p><h3 id="搭建项目" tabindex="-1"><a class="header-anchor" href="#搭建项目" aria-hidden="true">#</a> 搭建项目</h3><h4 id="💎-初始化项目" tabindex="-1"><a class="header-anchor" href="#💎-初始化项目" aria-hidden="true">#</a> 💎 初始化项目</h4><p>​ ps: 当选择了一个主题，请务必使用该主题提供的脚手架工具创建项目。这样可以减少很多配置上的麻烦。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>Need to install the following packages<span class="token operator">:</span>
  create<span class="token operator">-</span>vuepress<span class="token operator">-</span>theme<span class="token operator">-</span>hope@<span class="token number">2.0</span><span class="token number">.0</span><span class="token operator">-</span>beta<span class="token punctuation">.</span><span class="token number">233</span>
Ok to proceed<span class="token operator">?</span> <span class="token punctuation">(</span>y<span class="token punctuation">)</span> y
<span class="token operator">?</span> Select a language to display <span class="token operator">/</span> 选择显示语言 简体中文
<span class="token operator">?</span> 选择包管理器 yarn
生成 <span class="token keyword">package</span><span class="token punctuation">.</span>json<span class="token operator">...</span>
<span class="token operator">?</span> 设置应用名称 blogs
<span class="token operator">?</span> 设置应用版本号 <span class="token number">2.0</span><span class="token number">.0</span>
<span class="token operator">?</span> 设置应用描述 <span class="token constant">A</span> project <span class="token keyword">of</span> vuepress<span class="token operator">-</span>theme<span class="token operator">-</span>hope
<span class="token operator">?</span> 设置协议 <span class="token constant">MIT</span>
<span class="token operator">?</span> 项目需要用到多语言么<span class="token operator">?</span> No
<span class="token operator">?</span> 是否需要一个自动部署文档到 GitHub Pages 的工作流？ Yes
<span class="token operator">?</span> 你想要创建什么类型的项目？ blog
生成模板<span class="token operator">...</span>
<span class="token operator">?</span> 是否初始化 Git 仓库<span class="token operator">?</span> Yes
<span class="token operator">?</span> 选择你想使用的源 当前源
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>初始化目录结构如下：</p><h4 id="" tabindex="-1"><a class="header-anchor" href="#" aria-hidden="true">#</a> <img src="`+p+'" alt="image-20230807222825489" loading="lazy"></h4><h4 id="🚀-首页配置" tabindex="-1"><a class="header-anchor" href="#🚀-首页配置" aria-hidden="true">#</a> 🚀 首页配置</h4><p>其中，src 目录下的 <code>README.md</code>即为博客或者文档的首页。</p><p>等待下载完毕，执行 <code>npm run docs:dev</code></p><p>打开页面，可以看到博客的首页如下：</p><figure><img src="'+t+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>可以通过设置<code>heroFullScreen: false</code>，关闭 hero 背景全屏。</p><p>下滑之后文章的列表如下：</p><figure><img src="'+o+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>文章的列表来自于项目中所有的 markdown 文件，你可以在每个 md 文件的 frontmatter 中设置文章的标题、封面、分类、标签、日期、是否在文章列表中显示。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>---
title: 🚀🚀vue3自定义指令实践
isTimeLine: true
date: 2023-07-03
category:
  - 前端
tag:
  - JavaScript
  - Vue
---
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="🚀-导航栏" tabindex="-1"><a class="header-anchor" href="#🚀-导航栏" aria-hidden="true">#</a> 🚀 导航栏</h4><p>在开始之前你需要明确，你的导航栏需求是啥样的，可以根据文章分类，每个目录对应一个导航栏，例如如下：</p><figure><img src="`+i+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>导航栏的相关设置在 <code>navbar.ts</code>文件中。</p><p>默认为字符串，对应 src 目录下的文件路径，你可以省略 <code>.md</code> 扩展名，以 <code>/</code> 结尾的路径会被推断为 <code>/README.md</code>。</p><p>例如：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> navbar <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vuepress-theme-hope&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">navbar</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
  <span class="token string">&#39;/&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 对应首页，即src/README.md</span>
  <span class="token string">&#39;/react/&#39;</span> <span class="token comment">// 对应src/react/README.md</span>
<span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="🚀-侧边栏" tabindex="-1"><a class="header-anchor" href="#🚀-侧边栏" aria-hidden="true">#</a> 🚀 侧边栏</h4><p>侧边栏的配置在 <code>sidebar.ts</code>中</p><p>侧边栏的配置，我们可以分两种情况：全局导航栏、根据每个导航栏栏目分离式导航栏。</p><h4 id="💎-全局侧边栏配置" tabindex="-1"><a class="header-anchor" href="#💎-全局侧边栏配置" aria-hidden="true">#</a> 💎 全局侧边栏配置</h4><p>你可以设置侧边栏导航和导航栏的路由一一对应，这样就相当于是全局的侧边栏。</p><p>对于侧边栏的具体条目，可以通过设置<code>children: &quot;structure&quot;</code>根据当前目录下的文件名称自动生成。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> sidebar <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vuepress-theme-hope&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">sidebar</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token string-property property">&quot;/&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">&quot;React系列&quot;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">icon</span><span class="token operator">:</span> <span class="token string">&quot;react&quot;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">prefix</span><span class="token operator">:</span> <span class="token string">&quot;react/&quot;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">children</span><span class="token operator">:</span> <span class="token string">&quot;structure&quot;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">&quot;Vue系列&quot;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">icon</span><span class="token operator">:</span> <span class="token string">&quot;vue&quot;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">prefix</span><span class="token operator">:</span> <span class="token string">&quot;vue/&quot;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">children</span><span class="token operator">:</span> <span class="token string">&quot;structure&quot;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">&quot;Vite系列&quot;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">icon</span><span class="token operator">:</span> <span class="token string">&quot;tool&quot;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">prefix</span><span class="token operator">:</span> <span class="token string">&quot;vite/&quot;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">children</span><span class="token operator">:</span> <span class="token string">&quot;structure&quot;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token operator">...</span><span class="token operator">...</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="分离式导航栏" tabindex="-1"><a class="header-anchor" href="#分离式导航栏" aria-hidden="true">#</a> 分离式导航栏</h4><p>分离式菜单配置更简洁，如下所示：当设置<code>structure</code>时，默认根据目录下的文件自动生成侧边栏。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> sidebar <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vuepress-theme-hope&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">sidebar</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token string-property property">&#39;/react/&#39;</span><span class="token operator">:</span> <span class="token string">&#39;structure&#39;</span><span class="token punctuation">,</span>
  <span class="token string-property property">&#39;/framework/&#39;</span><span class="token operator">:</span> <span class="token string">&#39;structure&#39;</span><span class="token punctuation">,</span>
  <span class="token string-property property">&#39;/vite/&#39;</span><span class="token operator">:</span> <span class="token string">&#39;structure&#39;</span><span class="token punctuation">,</span>
  <span class="token string-property property">&#39;/vue/&#39;</span><span class="token operator">:</span> <span class="token string">&#39;structure&#39;</span><span class="token punctuation">,</span>
  <span class="token string-property property">&#39;/posts/&#39;</span><span class="token operator">:</span> <span class="token string">&#39;structure&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="🚀-搜索功能" tabindex="-1"><a class="header-anchor" href="#🚀-搜索功能" aria-hidden="true">#</a> 🚀 搜索功能</h4><p>该主题内置了几种常见搜索插件的支持，此教程使用的是<code>vuepress-plugin-search-pro</code>插件，配置参考的官方配置。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token function">searchProPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token comment">// 索引全部内容</span>
      <span class="token literal-property property">indexContent</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
      <span class="token comment">// 为分类和标签添加索引</span>
      <span class="token literal-property property">customFields</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token punctuation">{</span>
          <span class="token function-variable function">getter</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">page</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> page<span class="token punctuation">.</span>frontmatter<span class="token punctuation">.</span>category <span class="token keyword">as</span> any<span class="token punctuation">,</span>
          <span class="token literal-property property">formatter</span><span class="token operator">:</span> <span class="token string">&quot;分类：$content&quot;</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">{</span>
          <span class="token function-variable function">getter</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">page</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> page<span class="token punctuation">.</span>frontmatter<span class="token punctuation">.</span>tag <span class="token keyword">as</span> any<span class="token punctuation">,</span>
          <span class="token literal-property property">formatter</span><span class="token operator">:</span> <span class="token string">&quot;标签：$content&quot;</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="🚀-自动部署" tabindex="-1"><a class="header-anchor" href="#🚀-自动部署" aria-hidden="true">#</a> 🚀 自动部署</h4><p>该主题已经自动添加了<code>workflows</code>文件，你只需添加仓库，修改触发分支。上传完毕会自动生成 gh-pages 分支。</p><p>接着最重要的一步，到仓库的设置页面设置如下的内容：</p><figure><img src="`+r+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="🚀-添加评论功能" tabindex="-1"><a class="header-anchor" href="#🚀-添加评论功能" aria-hidden="true">#</a> 🚀 添加评论功能</h4><p>如果你的博客面向程序员，请使用<code>Giscus</code>，面向大众请选择<code>Waline</code>。</p><p>本次教程到此结束。</p>',50),u=[l];function d(k,v){return s(),a("div",null,u)}const g=n(c,[["render",d],["__file","vuePress搭建博客教程.html.vue"]]);export{g as default};
