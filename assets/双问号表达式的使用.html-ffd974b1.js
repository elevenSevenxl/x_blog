import{_ as s}from"./plugin-vue_export-helper-c27b6911.js";import{o as n,c as a,f as e}from"./app-e0b0be67.js";const o={},c=e(`<hr><p>双问号表达式是一种在 JavaScript 中进行空值合并的新语法。它是在 ECMAScript 2020 中引入的一种新的运算符，用于简化处理可能为空的变量或属性的情况。</p><p>双问号表达式使用两个问号（<code>??</code>）作为运算符。它的语法如下：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>a <span class="token operator">??</span> b
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>它的含义是，如果<code>a</code>的值是<code>null</code>或<code>undefined</code>，则返回<code>b</code>的值，否则返回<code>a</code>的值。换句话说，如果<code>a</code>的值为空，那么双问号表达式就会返回<code>b</code>的值，否则返回<code>a</code>的值。</p><p>让我们来看几个示例来说明双问号表达式的使用：</p><p>示例 1：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token keyword">null</span>
<span class="token keyword">let</span> y <span class="token operator">=</span> <span class="token number">10</span>
<span class="token keyword">let</span> z <span class="token operator">=</span> x <span class="token operator">??</span> y
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>z<span class="token punctuation">)</span> <span class="token comment">// 输出：10</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在这个示例中，变量<code>x</code>的值是<code>null</code>，所以双问号表达式返回了<code>y</code>的值<code>10</code>。</p><p>示例 2：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token keyword">undefined</span>
<span class="token keyword">let</span> b <span class="token operator">=</span> <span class="token number">20</span>
<span class="token keyword">let</span> c <span class="token operator">=</span> a <span class="token operator">??</span> b
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span> <span class="token comment">// 输出：20</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在这个示例中，变量<code>a</code>的值是<code>undefined</code>，所以双问号表达式返回了<code>b</code>的值<code>20</code>。</p><p>示例 3：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">let</span> m <span class="token operator">=</span> <span class="token number">5</span>
<span class="token keyword">let</span> n <span class="token operator">=</span> <span class="token number">15</span>
<span class="token keyword">let</span> p <span class="token operator">=</span> m <span class="token operator">??</span> n
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span> <span class="token comment">// 输出：5</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在这个示例中，变量<code>m</code>的值不为空，所以双问号表达式返回了<code>m</code>的值<code>5</code>。</p><p>双问号表达式通常用于简化处理可能为空的变量或属性的情况。它提供了一种更简洁的方式来设置默认值，而不需要使用繁琐的条件语句或三元运算符。但需要注意的是，双问号表达式只能用于判断<code>null</code>或<code>undefined</code>的情况，对于其他假值（如空字符串、0 等）并不适用。如果需要处理其他假值，仍然需要使用传统的条件语句或三元运算符。</p><hr>`,17),p=[c];function d(t,l){return n(),a("div",null,p)}const u=s(o,[["render",d],["__file","双问号表达式的使用.html.vue"]]);export{u as default};
