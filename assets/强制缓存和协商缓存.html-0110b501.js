const e=JSON.parse('{"key":"v-3cd2d646","path":"/posts/%E5%BC%BA%E5%88%B6%E7%BC%93%E5%AD%98%E5%92%8C%E5%8D%8F%E5%95%86%E7%BC%93%E5%AD%98.html","title":"强制缓存和协商缓存","lang":"zh-CN","frontmatter":{"title":"强制缓存和协商缓存","cover":"/assets/images/cover11.jpg","isTimeLine":true,"date":"2023-10-01T00:00:00.000Z","footer":"<a href=\\"https://icp.gov.moe/?keyword=20231319\\" target=\\"_blank\\">萌 ICP 备 20231319 号</a>","copyright":"Copyright © 2023 没有蜡笔的小新","category":["前端"],"tag":["http"],"description":"缓存 HTTP/1.1 支持缓存。缓存是一种在客户端和服务器之间存储和复用资源的机制，可以提高性能和减少网络流量。它允许客户端在后续请求中避免重新请求相同资源，而是直接从本地缓存中获取资源副本。HTTP/1.1 提供了两种缓存方式，强制缓存和协商缓存。 强制缓存 强制缓存是通过设置响应首部字段的缓存控制字段，让客户端在一定时间内强制使用本地缓存机制。即使服务器已经有更新，客户端也不会发送请求到服务器进行验证，而是直接从本地缓存中获取资源。 强制缓存主要通过两类字段进行控制，分别是 Cache-Control 和 Expires。其中：","head":[["meta",{"property":"og:url","content":"https://elevenSevenxl.github.io/x_blog/x_blog/posts/%E5%BC%BA%E5%88%B6%E7%BC%93%E5%AD%98%E5%92%8C%E5%8D%8F%E5%95%86%E7%BC%93%E5%AD%98.html"}],["meta",{"property":"og:site_name","content":"木兮blog"}],["meta",{"property":"og:title","content":"强制缓存和协商缓存"}],["meta",{"property":"og:description","content":"缓存 HTTP/1.1 支持缓存。缓存是一种在客户端和服务器之间存储和复用资源的机制，可以提高性能和减少网络流量。它允许客户端在后续请求中避免重新请求相同资源，而是直接从本地缓存中获取资源副本。HTTP/1.1 提供了两种缓存方式，强制缓存和协商缓存。 强制缓存 强制缓存是通过设置响应首部字段的缓存控制字段，让客户端在一定时间内强制使用本地缓存机制。即使服务器已经有更新，客户端也不会发送请求到服务器进行验证，而是直接从本地缓存中获取资源。 强制缓存主要通过两类字段进行控制，分别是 Cache-Control 和 Expires。其中："}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://elevenSevenxl.github.io/x_blog/x_blog/assets/images/cover11.jpg"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-09-28T07:01:05.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"强制缓存和协商缓存"}],["meta",{"property":"article:author","content":"没有蜡笔的小新"}],["meta",{"property":"article:tag","content":"http"}],["meta",{"property":"article:published_time","content":"2023-10-01T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-09-28T07:01:05.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"强制缓存和协商缓存\\",\\"image\\":[\\"https://elevenSevenxl.github.io/x_blog/x_blog/assets/images/cover11.jpg\\"],\\"datePublished\\":\\"2023-10-01T00:00:00.000Z\\",\\"dateModified\\":\\"2023-09-28T07:01:05.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"没有蜡笔的小新\\",\\"url\\":\\"https://elevenSevenxl.github.io/x_blog\\"}]}"]]},"headers":[{"level":3,"title":"缓存","slug":"缓存","link":"#缓存","children":[]}],"git":{"createdTime":1695884465000,"updatedTime":1695884465000,"contributors":[{"name":"yxl","email":"123@qq.com","commits":1}]},"readingTime":{"minutes":2.87,"words":861},"filePathRelative":"posts/强制缓存和协商缓存.md","localizedDate":"2023年10月1日","excerpt":"<hr>\\n<h3> 缓存</h3>\\n<p>HTTP/1.1 支持缓存。缓存是一种在客户端和服务器之间存储和复用资源的机制，可以提高性能和减少网络流量。它允许客户端在后续请求中避免重新请求相同资源，而是直接从本地缓存中获取资源副本。HTTP/1.1 提供了两种缓存方式，强制缓存和协商缓存。</p>\\n<h4> 强制缓存</h4>\\n<p>强制缓存是通过设置响应首部字段的缓存控制字段，让客户端在一定时间内强制使用本地缓存机制。即使服务器已经有更新，客户端也不会发送请求到服务器进行验证，而是直接从本地缓存中获取资源。</p>\\n<p>强制缓存主要通过两类字段进行控制，分别是 <strong>Cache-Control</strong> 和 <strong>Expires</strong>。其中：</p>","autoDesc":true}');export{e as data};
