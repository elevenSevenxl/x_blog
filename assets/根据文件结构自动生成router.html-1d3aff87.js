const n=JSON.parse(`{"key":"v-5271444b","path":"/vue/%E6%A0%B9%E6%8D%AE%E6%96%87%E4%BB%B6%E7%BB%93%E6%9E%84%E8%87%AA%E5%8A%A8%E7%94%9F%E6%88%90router.html","title":"根据文件结构自动生成router.js","lang":"zh-CN","frontmatter":{"title":"根据文件结构自动生成router.js","cover":"/assets/images/cover14.jpg","isTimeLine":true,"date":"2023-08-29T00:00:00.000Z","footer":"<a href=\\"https://icp.gov.moe/?keyword=20255521\\" target=\\"_blank\\">萌 ICP 备 20255521 号</a>","copyright":"Copyright © 2025 没有蜡笔的小新","category":["vue"],"tag":["vue"],"description":"根据文件结构自动生成 router.js 读取 views 目录下的.vue 文件动态生成路由 var fs = require('fs') const readline = require('readline') const os = require('os') const vueDir = './src/views/' fs.readdir(vueDir, (err, files) =&gt; { if (err) { console.log(err) return } let routers = '' for (const [index, fileName] of files.entries()) { console.log('zzzzzzzzz', index) if (fileName.indexOf('.') &lt; 0) { continue } const [name, ext] = fileName.split('.') if (ext !== 'vue') { continue } // let routerName = null // const contentFull = fs.readFileSync(\`\${vueDir}\${fileName}\`, 'utf-8') // - Windows 使用 \\\\r\\\\n // - Linux/Unix 使用 \\\\n // - Mac OS 使用 \\\\r // os.EOL 将会根据当前的操作系统,返回对应行结束符的表示 // var match = /\\\\&lt;\\\\!\\\\-\\\\-\\\\s*(.*)\\\\s*\\\\-\\\\-\\\\&gt;/g.exec(contentFull.split(os.EOL)[0]) // console.log('ccc', match) // if (match) { // routerName = match[1].trim() // } console.log('qqqqqqq', os) routers += \` { \\\\n\\\\t\\\\t\${name ? \\"name: '\\" + name + \\"',\\\\n\\\\t\\\\t\\"''}path: '/\${name === 'root' ? '' : name}',\\\\n\\\\t\\\\tcomponent: () =&gt; import(/* webpackChunkName: '\${name}' */ '@/views/\${fileName}')\\\\n\\\\t}\` // 如果不是最后一个路由添加则添加换行和， if (index !== files.length - 1) { routers += ',\\\\n' } console.log('------------', routers) } const result = \`// 该文件由gen-router.js自动生成，请勿手动修改 import VueRouter from 'vue-router' import Vue from 'vue' Vue.use(VueRouter) const routes = [ \${routers} ]; const router = new VueRouter({ mode: 'hash', routes }) export default router \` // console.log(result); fs.writeFile('./src/router.js', result, 'utf-8', err =&gt; { if (err) throw err // 如果没有错误 console.log('./src/router.js 生成成功！') }) })","head":[["meta",{"property":"og:url","content":"https://elevenSevenxl.github.io/x_blog/x_blog/vue/%E6%A0%B9%E6%8D%AE%E6%96%87%E4%BB%B6%E7%BB%93%E6%9E%84%E8%87%AA%E5%8A%A8%E7%94%9F%E6%88%90router.html"}],["meta",{"property":"og:site_name","content":"木兮blog"}],["meta",{"property":"og:title","content":"根据文件结构自动生成router.js"}],["meta",{"property":"og:description","content":"根据文件结构自动生成 router.js 读取 views 目录下的.vue 文件动态生成路由 var fs = require('fs') const readline = require('readline') const os = require('os') const vueDir = './src/views/' fs.readdir(vueDir, (err, files) =&gt; { if (err) { console.log(err) return } let routers = '' for (const [index, fileName] of files.entries()) { console.log('zzzzzzzzz', index) if (fileName.indexOf('.') &lt; 0) { continue } const [name, ext] = fileName.split('.') if (ext !== 'vue') { continue } // let routerName = null // const contentFull = fs.readFileSync(\`\${vueDir}\${fileName}\`, 'utf-8') // - Windows 使用 \\\\r\\\\n // - Linux/Unix 使用 \\\\n // - Mac OS 使用 \\\\r // os.EOL 将会根据当前的操作系统,返回对应行结束符的表示 // var match = /\\\\&lt;\\\\!\\\\-\\\\-\\\\s*(.*)\\\\s*\\\\-\\\\-\\\\&gt;/g.exec(contentFull.split(os.EOL)[0]) // console.log('ccc', match) // if (match) { // routerName = match[1].trim() // } console.log('qqqqqqq', os) routers += \` { \\\\n\\\\t\\\\t\${name ? \\"name: '\\" + name + \\"',\\\\n\\\\t\\\\t\\"''}path: '/\${name === 'root' ? '' : name}',\\\\n\\\\t\\\\tcomponent: () =&gt; import(/* webpackChunkName: '\${name}' */ '@/views/\${fileName}')\\\\n\\\\t}\` // 如果不是最后一个路由添加则添加换行和， if (index !== files.length - 1) { routers += ',\\\\n' } console.log('------------', routers) } const result = \`// 该文件由gen-router.js自动生成，请勿手动修改 import VueRouter from 'vue-router' import Vue from 'vue' Vue.use(VueRouter) const routes = [ \${routers} ]; const router = new VueRouter({ mode: 'hash', routes }) export default router \` // console.log(result); fs.writeFile('./src/router.js', result, 'utf-8', err =&gt; { if (err) throw err // 如果没有错误 console.log('./src/router.js 生成成功！') }) })"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://elevenSevenxl.github.io/x_blog/x_blog/assets/images/cover14.jpg"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-02-14T07:44:03.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"根据文件结构自动生成router.js"}],["meta",{"property":"article:author","content":"没有蜡笔的小新"}],["meta",{"property":"article:tag","content":"vue"}],["meta",{"property":"article:published_time","content":"2023-08-29T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-02-14T07:44:03.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"根据文件结构自动生成router.js\\",\\"image\\":[\\"https://elevenSevenxl.github.io/x_blog/x_blog/assets/images/cover14.jpg\\"],\\"datePublished\\":\\"2023-08-29T00:00:00.000Z\\",\\"dateModified\\":\\"2025-02-14T07:44:03.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"没有蜡笔的小新\\",\\"url\\":\\"https://elevenSevenxl.github.io/x_blog\\"}]}"]]},"headers":[{"level":2,"title":"根据文件结构自动生成 router.js","slug":"根据文件结构自动生成-router-js","link":"#根据文件结构自动生成-router-js","children":[{"level":3,"title":"读取 views 目录下的.vue 文件动态生成路由","slug":"读取-views-目录下的-vue-文件动态生成路由","link":"#读取-views-目录下的-vue-文件动态生成路由","children":[]},{"level":3,"title":"新建一个 vue2 项目的 demo，在 package.json 文件中配置","slug":"新建一个-vue2-项目的-demo-在-package-json-文件中配置","link":"#新建一个-vue2-项目的-demo-在-package-json-文件中配置","children":[]},{"level":3,"title":"执行 npm run dev ，生成文件如下","slug":"执行-npm-run-dev-生成文件如下","link":"#执行-npm-run-dev-生成文件如下","children":[]}]}],"git":{"createdTime":1693314156000,"updatedTime":1739519043000,"contributors":[{"name":"yxl","email":"123@qq.com","commits":1},{"name":"yxl","email":"1551536781@qq.com","commits":1}]},"readingTime":{"minutes":1.51,"words":453},"filePathRelative":"vue/根据文件结构自动生成router.md","localizedDate":"2023年8月29日","excerpt":"<hr>\\n<h2> 根据文件结构自动生成 router.js</h2>\\n<h3> 读取 views 目录下的.vue 文件动态生成路由</h3>\\n<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"token keyword\\">var</span> fs <span class=\\"token operator\\">=</span> <span class=\\"token function\\">require</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'fs'</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token keyword\\">const</span> readline <span class=\\"token operator\\">=</span> <span class=\\"token function\\">require</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'readline'</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token keyword\\">const</span> os <span class=\\"token operator\\">=</span> <span class=\\"token function\\">require</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'os'</span><span class=\\"token punctuation\\">)</span>\\n\\n<span class=\\"token keyword\\">const</span> vueDir <span class=\\"token operator\\">=</span> <span class=\\"token string\\">'./src/views/'</span>\\n\\nfs<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">readdir</span><span class=\\"token punctuation\\">(</span>vueDir<span class=\\"token punctuation\\">,</span> <span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">err<span class=\\"token punctuation\\">,</span> files</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>err<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    console<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span>err<span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token keyword\\">return</span>\\n  <span class=\\"token punctuation\\">}</span>\\n  <span class=\\"token keyword\\">let</span> routers <span class=\\"token operator\\">=</span> <span class=\\"token string\\">''</span>\\n  <span class=\\"token keyword\\">for</span> <span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">const</span> <span class=\\"token punctuation\\">[</span>index<span class=\\"token punctuation\\">,</span> fileName<span class=\\"token punctuation\\">]</span> <span class=\\"token keyword\\">of</span> files<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">entries</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    console<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'zzzzzzzzz'</span><span class=\\"token punctuation\\">,</span> index<span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>fileName<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">indexOf</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'.'</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">&lt;</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n      <span class=\\"token keyword\\">continue</span>\\n    <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token keyword\\">const</span> <span class=\\"token punctuation\\">[</span>name<span class=\\"token punctuation\\">,</span> ext<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> fileName<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">split</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'.'</span><span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>ext <span class=\\"token operator\\">!==</span> <span class=\\"token string\\">'vue'</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n      <span class=\\"token keyword\\">continue</span>\\n    <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token comment\\">// let routerName = null</span>\\n    <span class=\\"token comment\\">// const contentFull = fs.readFileSync(\`\${vueDir}\${fileName}\`, 'utf-8')</span>\\n    <span class=\\"token comment\\">// - Windows 使用 \\\\r\\\\n</span>\\n    <span class=\\"token comment\\">// - Linux/Unix 使用 \\\\n</span>\\n    <span class=\\"token comment\\">// - Mac OS 使用 \\\\r</span>\\n    <span class=\\"token comment\\">// os.EOL 将会根据当前的操作系统,返回对应行结束符的表示</span>\\n    <span class=\\"token comment\\">// var match = /\\\\&lt;\\\\!\\\\-\\\\-\\\\s*(.*)\\\\s*\\\\-\\\\-\\\\&gt;/g.exec(contentFull.split(os.EOL)[0])</span>\\n    <span class=\\"token comment\\">// console.log('ccc', match)</span>\\n    <span class=\\"token comment\\">// if (match) {</span>\\n    <span class=\\"token comment\\">//   routerName = match[1].trim()</span>\\n    <span class=\\"token comment\\">// }</span>\\n    console<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'qqqqqqq'</span><span class=\\"token punctuation\\">,</span> os<span class=\\"token punctuation\\">)</span>\\n    routers <span class=\\"token operator\\">+=</span> <span class=\\"token template-string\\"><span class=\\"token template-punctuation string\\">\`</span><span class=\\"token string\\">  { \\\\n\\\\t\\\\t</span><span class=\\"token interpolation\\"><span class=\\"token interpolation-punctuation punctuation\\">\${</span>name <span class=\\"token operator\\">?</span> <span class=\\"token string\\">\\"name: '\\"</span> <span class=\\"token operator\\">+</span> name <span class=\\"token operator\\">+</span> <span class=\\"token string\\">\\"',\\\\n\\\\t\\\\t\\"</span><span class=\\"token string\\">''</span><span class=\\"token interpolation-punctuation punctuation\\">}</span></span><span class=\\"token string\\">path: '/</span><span class=\\"token interpolation\\"><span class=\\"token interpolation-punctuation punctuation\\">\${</span>name <span class=\\"token operator\\">===</span> <span class=\\"token string\\">'root'</span> <span class=\\"token operator\\">?</span> <span class=\\"token string\\">''</span> <span class=\\"token operator\\">:</span> name<span class=\\"token interpolation-punctuation punctuation\\">}</span></span><span class=\\"token string\\">',\\\\n\\\\t\\\\tcomponent: () =&gt; import(/* webpackChunkName: '</span><span class=\\"token interpolation\\"><span class=\\"token interpolation-punctuation punctuation\\">\${</span>name<span class=\\"token interpolation-punctuation punctuation\\">}</span></span><span class=\\"token string\\">' */ '@/views/</span><span class=\\"token interpolation\\"><span class=\\"token interpolation-punctuation punctuation\\">\${</span>fileName<span class=\\"token interpolation-punctuation punctuation\\">}</span></span><span class=\\"token string\\">')\\\\n\\\\t}</span><span class=\\"token template-punctuation string\\">\`</span></span>\\n    <span class=\\"token comment\\">// 如果不是最后一个路由添加则添加换行和，</span>\\n    <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>index <span class=\\"token operator\\">!==</span> files<span class=\\"token punctuation\\">.</span>length <span class=\\"token operator\\">-</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n      routers <span class=\\"token operator\\">+=</span> <span class=\\"token string\\">',\\\\n'</span>\\n    <span class=\\"token punctuation\\">}</span>\\n    console<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'------------'</span><span class=\\"token punctuation\\">,</span> routers<span class=\\"token punctuation\\">)</span>\\n  <span class=\\"token punctuation\\">}</span>\\n  <span class=\\"token keyword\\">const</span> result <span class=\\"token operator\\">=</span> <span class=\\"token template-string\\"><span class=\\"token template-punctuation string\\">\`</span><span class=\\"token string\\">// 该文件由gen-router.js自动生成，请勿手动修改\\nimport VueRouter from 'vue-router'\\nimport Vue from 'vue'\\n\\nVue.use(VueRouter)\\nconst routes = [\\n</span><span class=\\"token interpolation\\"><span class=\\"token interpolation-punctuation punctuation\\">\${</span>routers<span class=\\"token interpolation-punctuation punctuation\\">}</span></span><span class=\\"token string\\">\\n];\\n\\nconst router = new VueRouter({\\n  mode: 'hash',\\n  routes\\n})\\nexport default router\\n\\n</span><span class=\\"token template-punctuation string\\">\`</span></span>\\n  <span class=\\"token comment\\">// console.log(result);</span>\\n  fs<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">writeFile</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'./src/router.js'</span><span class=\\"token punctuation\\">,</span> result<span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">'utf-8'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token parameter\\">err</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>err<span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">throw</span> err\\n    <span class=\\"token comment\\">// 如果没有错误</span>\\n    console<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'./src/router.js 生成成功！'</span><span class=\\"token punctuation\\">)</span>\\n  <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\n\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{n as data};
